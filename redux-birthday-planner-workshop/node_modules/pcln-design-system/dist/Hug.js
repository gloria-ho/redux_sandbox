'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(['\n  border-top-left-radius: ', ';\n  border-top-right-radius: ', ';\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n  overflow: hidden;\n'], ['\n  border-top-left-radius: ', ';\n  border-top-right-radius: ', ';\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n  overflow: hidden;\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  & > * {\n    border: 0 !important;\n  }\n'], ['\n  & > * {\n    border: 0 !important;\n  }\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n  ', ';\n'], ['\n  ', ';\n']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Box = require('./Box');

var _Box2 = _interopRequireDefault(_Box);

var _Card = require('./Card');

var _Card2 = _interopRequireDefault(_Card);

var _Flex = require('./Flex');

var _Flex2 = _interopRequireDefault(_Flex);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _Text = require('./Text');

var _Text2 = _interopRequireDefault(_Text);

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _styledSystem = require('styled-system');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var display = (0, _styledSystem.responsiveStyle)({
  prop: 'display',
  cssProperty: 'display'
});

var HugCard = (0, _styledComponents2.default)(_Card2.default)(_templateObject, function (props) {
  return props.theme.radius;
}, function (props) {
  return props.theme.radius;
});

var BorderConcealer = (0, _styledComponents2.default)(_Box2.default)(_templateObject2);

var HideableIcon = (0, _styledComponents2.default)(_Icon2.default)(_templateObject3, display);

var Hug = function Hug(_ref) {
  var bg = _ref.bg,
      color = _ref.color,
      p = _ref.p,
      fontSize = _ref.fontSize,
      icon = _ref.icon,
      iconDisplay = _ref.iconDisplay,
      legacy = _ref.legacy,
      props = _objectWithoutProperties(_ref, ['bg', 'color', 'p', 'fontSize', 'icon', 'iconDisplay', 'legacy']);

  return _react2.default.createElement(
    HugCard,
    _extends({}, props, { borderColor: bg }),
    _react2.default.createElement(
      _Flex2.default,
      { bg: bg, color: color, p: p, align: 'center' },
      !!icon && _react2.default.createElement(HideableIcon, {
        mr: 2,
        mt: '-2px',
        mb: '2px',
        name: icon,
        size: 24,
        display: iconDisplay,
        legacy: legacy
      }),
      _react2.default.createElement(
        _Text2.default,
        { fontSize: fontSize },
        props.text
      )
    ),
    _react2.default.createElement(
      BorderConcealer,
      null,
      props.children
    )
  );
};

Hug.defaultProps = {
  bg: 'green',
  borderWidth: 1,
  color: 'white',
  fontSize: 1,
  p: 2,
  theme: _theme2.default
};

Hug.propTypes = {
  iconDisplay: _propTypes2.default.arrayOf(_propTypes2.default.string),
  icon: _propTypes2.default.string,
  text: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.string])
};

exports.default = Hug;