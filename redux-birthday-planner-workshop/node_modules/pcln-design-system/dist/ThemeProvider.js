'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Base = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(['body {\n  margin: 0;\n}'], ['body {\n  margin: 0;\n}']),
    _templateObject2 = _taggedTemplateLiteral(['\n  font-family: ', ';\n  line-height: 1.4;\n\n  * {\n    box-sizing: border-box;\n  }\n'], ['\n  font-family: ', ';\n  line-height: 1.4;\n\n  * {\n    box-sizing: border-box;\n  }\n']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

var _legacyTheme = require('./legacyTheme');

var _legacyTheme2 = _interopRequireDefault(_legacyTheme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

(0, _styledComponents.injectGlobal)(_templateObject);

var Base = exports.Base = _styledComponents2.default.div(_templateObject2, function (props) {
  return props.theme.font;
});

var ThemeProvider = function ThemeProvider(_ref) {
  var legacy = _ref.legacy,
      customBreakpoints = _ref.customBreakpoints,
      props = _objectWithoutProperties(_ref, ['legacy', 'customBreakpoints']);

  var baseTheme = legacy ? _legacyTheme2.default : _theme2.default;
  var breakpoints = customBreakpoints || baseTheme.breakpoints;
  var theme = _extends({}, baseTheme, {
    breakpoints: breakpoints
  });

  return _react2.default.createElement(
    _styledComponents.ThemeProvider,
    { theme: theme },
    _react2.default.createElement(Base, props)
  );
};

ThemeProvider.propTypes = {
  /** Enable legacy color palette */
  legacy: _propTypes2.default.bool,
  /** Array of pixel values for custom breakpoint overrides */
  customBreakpoints: _propTypes2.default.arrayOf(_propTypes2.default.number)
};

exports.default = ThemeProvider;