'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(['\n  -webkit-font-smoothing: antialiased;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n  text-decoration: none;\n  font-family: inherit;\n  font-weight: 600;\n  line-height: 1.5;\n  cursor: pointer;\n  border-radius: ', ';\n  background-color: ', ';\n  color: ', ';\n  border-width: 0;\n  border-style: solid;\n\n  &:disabled {\n    opacity: 0.25;\n  }\n\n  &:hover {\n    background-color: ', ';\n  }\n\n  ', ' ', ' ', ';\n'], ['\n  -webkit-font-smoothing: antialiased;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n  text-decoration: none;\n  font-family: inherit;\n  font-weight: 600;\n  line-height: 1.5;\n  cursor: pointer;\n  border-radius: ', ';\n  background-color: ', ';\n  color: ', ';\n  border-width: 0;\n  border-style: solid;\n\n  &:disabled {\n    opacity: 0.25;\n  }\n\n  &:hover {\n    background-color: ', ';\n  }\n\n  ', ' ', ' ', ';\n']);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styledSystem = require('styled-system');

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var size = function size(props) {
  switch (props.size) {
    case 'small':
      return {
        fontSize: props.theme.fontSizes[0] + 'px',
        padding: '7px 12px'
      };
    case 'medium':
      return {
        fontSize: props.theme.fontSizes[1] + 'px',
        padding: '9.5px 18px'
      };
    case 'large':
      return {
        fontSize: props.theme.fontSizes[2] + 'px',
        padding: '12px 22px'
      };
    default:
      return {
        fontSize: props.theme.fontSizes[1] + 'px',
        padding: '9.5px 18px'
      };
  }
};

var fullWidth = function fullWidth(props) {
  return props.fullWidth ? { width: '100%' } : null;
};

var Button = _styledComponents2.default.button(_templateObject, function (props) {
  return props.theme.radius;
}, function (props) {
  return props.theme.colors.blue;
}, function (props) {
  return props.theme.colors.white;
}, function (props) {
  return props.disabled ? null : props.theme.colors.darkBlue;
}, fullWidth, size, _styledSystem.space);

var numberStringOrArray = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.array]);

Button.propTypes = {
  /** Size */
  size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
  fullWidth: _propTypes2.default.bool,
  /** Margin */
  m: numberStringOrArray,
  mt: numberStringOrArray,
  mr: numberStringOrArray,
  mb: numberStringOrArray,
  ml: numberStringOrArray,
  mx: numberStringOrArray,
  my: numberStringOrArray,
  /** Padding */
  p: numberStringOrArray,
  pt: numberStringOrArray,
  pr: numberStringOrArray,
  pb: numberStringOrArray,
  pl: numberStringOrArray,
  px: numberStringOrArray,
  py: numberStringOrArray
};

Button.defaultProps = {
  theme: _theme2.default
};

Button.displayName = 'Button';

exports.default = Button;